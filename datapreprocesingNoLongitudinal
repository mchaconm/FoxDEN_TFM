import pandas as pd
import math
pd.set_option('display.max_colwidth', -1)
#El objetivo de esta parte es crear una tabla donde podamos recoger los datos relacionados con el paciente que no son de tipo longitudinal.
#Vamos a empezar importando el conjunto de datos demográficos de los pacientes, así como sus datos genéticos.
df = pd.read_csv("C:/Users/miguelico/Google Drive/master/TFM/Data/Variables/AD_variable.csv" , sep = ",")
##############################################################Users########################################################################
Users = pd.read_csv("C:/Users/miguelico/Google Drive/master/TFM/Data/Variables/Users.csv" , sep = ",")
#Eliminamos la vriable LocCounty al ser una variable que no es significativa.
Users = Users.drop (['LocCounty'], axis = 1)

#Cambiamos los valores nulos que aparecen en las variables que sólo se contesta si tiene Parkinson por -1.
Users['YearsWithPD'] = [-1  if (math.isnan(Users['YearsWithPD'].iloc[x]) == True) & (Users['InitPDDiag'].iloc[x] == 0)   else x for x in range(Users.shape[0])]
Users['InitPDDiagAge'] = [-1  if (math.isnan(Users['InitPDDiagAge'].iloc[x]) == True) & (Users['InitPDDiag'].iloc[x] == 0)   else x for x in range(Users.shape[0])]
#Cómo podemos ver en la tabla de data variables, la mayoría de las variables aunque son categóricas no tienen type categorico, por lo que vamos a transformala en este formato.
col_cat = list(df['Variable'][(df['name of table'] == 'Users') & (df['# of different values'] < 100 )])
col_cat.remove('LocCounty')
for x in col_cat:
    Users[x] = Users[x].astype('category')
#############################################################Genetic/TablaComodin#######################################################################
genetic = pd.read_csv("C:/Users/miguelico/Google Drive/master/TFM/Data/Variables/Genetic.csv" , sep = ",")
#Dado que en la tabla genetic no aparece la edad podría ser interesante unirla a la tabla Users.
TableComodin = Users.merge(genetic, how = 'left', on = 'fox_insight_id')
############################################################EXPERIENCES WITH SENSORY MISPERCEPTIONS#####################################################
esm = pd.read_csv("C:/Users/miguelico/Google Drive/master/TFM/Data/Variables/Experiences_with_Sensory_Misperceptions.csv" , sep = ",")
#Como podemos ver más abajo está tabla tiene como fecha de realización la misma que la de Users o unos meses antes por lo que podríamos agregarla 
#a la tabla comodin con lo que tendríamos una primera toma de contacto del paciente en el estudio.
#Vamos a hacer una comparación entre las columnas days_elapsed de Users y la de esta tabla.
proof = Users[['fox_insight_id','age']].merge(esm1[['fox_insight_id', 'age']], how = 'inner', on = 'fox_insight_id')
proof['dif'] = proof['age_x'] - proof['age_y']
proof['dif'].max()
#Como podemos ver del cálculo anterior la diferencia máxima de tiempo entre un paciente y otro es de 8 meses.

#Vamos a borrar las columnas que tengan más de un 90% de missing values.
col = []
for x in esm1.columns:
    if esm1[x].isna().sum() > 4822.2:
        col.append(x)
esm1 = esm1.drop(col, axis = 1)
#Dado que los valores categóricos de las columnas presentan un valor de 1 para si y de 2 para no, en contraposición a las variables categóricas de Users, 
#vamos a normalizar dichas variables para que sean como las de Users.
col2 = []
for x in esm1.columns:
    if len(esm1[x].unique()) == 2 :
        col2.append(x)
for y in col2:
    esm1[y] = [0  if esm1[y].iloc[x] == 2 else 1 for x in range(len(esm1[x])) ]
col3 = []
for x in esm1.columns:
    if (len(esm1[x].unique()) < 10):
        esm1[x] = esm1[x].astype('category')
#Vamos ahora a añadir el sufijo esm1 a las columnas de esta tabla para saber en un futuro que no estamos refiriendo a estas.
col_esm1 = list(esm1.columns)
col_esm1.remove('fox_insight_id')
for x in range(len(col_esm1)):
    col_esm1[x] = col_esm1[x] + 'esm1'
col_esm1 = ['fox_insight_id'] + col_esm1
b = dict(zip(list(esm1.columns), col_esm1))
TableComodin = TableComodin.merge(esm1, how = 'left', on = 'fox_insight_id')
#Finalmente, introducimos las columnas en nuestra TablaComodin.
TableComodin = TableComodin.merge(esm1, how = 'left', on = 'fox_insight_id')
